CREATE TABLE "PRODUCT_ORD" (
	"ORDERCODE"	NUMBER(20, 0)		NOT NULL,
	"USERID"	VARCHAR2(30)		NOT NULL,
	"NAME"	VARCHAR2(30)		NULL,
	"POSTCODE"	VARCHAR2(30)		NULL,
	"ADDR"	VARCHAR2(100)		NULL,
	"ETCADDR"	VARCHAR2(100)		NULL,
	"HP"	VARCHAR2(50)		NULL,
	"MEMO"	VARCHAR2(100)		NULL,
	"ORDERDATE"	DATE		NULL,
	"TOTALPRICE"	VARCHAR2(50)		NULL,
	"STATUS"	NUMBER(10)	DEFAULT 1	NULL,
	"CHANGEDATE"	VARCHAR(255)		NULL
);

COMMENT ON COLUMN "PRODUCT_ORD"."STATUS" IS '1:주문, 2:교환, 3:환불, 4:주소';

CREATE TABLE "PRODUCT_OUT" (
	"POCODE"	NUMBER(20)		NOT NULL,
	"ORDERCODE"	NUMBER(20)		NOT NULL,
	"PROCODE"	NUMBER(20)		NOT NULL,
	"AMOUNT"	NUMBER(20)		NULL,
	"STATUS"	NUMBER(10)	DEFAULT 1	NULL,
	"OUTDATE"	DATE		NULL
);

COMMENT ON COLUMN "PRODUCT_OUT"."STATUS" IS '1: 결제대기, 2: 출고대기, 3: 출고, 4: 취소';

CREATE TABLE "PRODUCT" (
	"PROCODE"	NUMBER(20)		NOT NULL,
	"CATECODE"	NUMBER(20)		NOT NULL,
	"PRONAME"	VARCHAR2(30)		NULL,
	"PROPRICE"	VARCHAR2(30)		NULL,
	"PROSALE"	VARCHAR2(30)		NULL,
	"PROINFO"	VARCHAR2(500)		NULL,
	"PROYN"	VARCHAR2(10)	DEFAULT 'Y'	NULL,
	"PROQTY"	NUMBER(30, 0)		NULL,
	"PROTHUMB"	VARCHAR2(500)		NULL,
	"PROIMG"	VARCHAR2(500)		NULL
);

CREATE TABLE "PAY" (
	"PAYCODE"	NUMBER(20)		NOT NULL,
	"ORDERCODE"	NUMBER(20)		NOT NULL,
	"PAYPRICE"	NUMBER(20)		NULL,
	"PAYMENT"	NUMBER(10)		NULL,
	"ISPAID"	NUMBER(10)		NULL,
	"ISREFUND"	NUMBER(10)	DEFAULT 0	NULL
);

COMMENT ON COLUMN "PAY"."PAYMENT" IS '1: 무통장입금, 2: 신용카드, 3: 카카오페이';

CREATE TABLE "MEMBER" (
	"ID"	VARCHAR2(30)		NOT NULL,
	"PWD"	VARCHAR2(200)		NULL,
	"EMAIL"	VARCHAR2(30)		NULL,
	"HP"	VARCHAR2(30)		NULL,
	"NAME"	VARCHAR2(30)		NULL,
	"PCODE"	VARCHAR2(30)		NULL,
	"LOADADDR"	VARCHAR2(100)		NULL,
	"LOTADDR"	VARCHAR2(100)		NULL,
	"EXTRAADDR"	VARCHAR2(100)		NULL,
	"ETCADDR"	VARCHAR2(100)		NULL,
	"ADMIN"	VARCHAR2(10)	DEFAULT 'N'	NULL
);

CREATE TABLE "CATEGORY" (
	"CATECODE"	NUMBER(20)		NOT NULL,
	"CATENAME"	VARCHAR2(30)		NULL,
	"CATECODEREF"	NUMBER(20)		NULL
);

CREATE TABLE "PRODUCT_QNA" (
	"QNACODE"	NUMBER(20)		NOT NULL,
	"PROCODE"	NUMBER(20)		NOT NULL,
	"QNATITLE"	VARCHAR2(100)		NULL,
	"QNACONT"	VARCHAR2(500)		NULL,
	"QNADATE"	DATE		NULL,
	"QNAAUTH"	VARCHAR2(30)		NULL
);

CREATE TABLE "PRODUCT_QNA_RE" (
	"RECODE"	NUMBER(20)		NOT NULL,
	"QNACODE"	NUMBER(20)		NOT NULL,
	"RECONT"	VARCHAR2(500)		NULL,
	"REDATE"	DATE		NULL
);

CREATE TABLE "NOTICE" (
	"NOTICODE"	NUMBER(20)		NOT NULL,
	"NOTITITLE"	VARCHAR2(500)		NULL,
	"NOTICONT"	VARCHAR2(500)		NULL,
	"NOTIDATE"	DATE		NULL,
	"NOTIAUTH"	VARCHAR2(30)		NULL
);

CREATE TABLE "CART" (
	"CARTCODE"	NUMBER(20)		NOT NULL,
	"USERID"	VARCHAR2(30)		NOT NULL,
	"PROCODE"	NUMBER(20)		NOT NULL,
	"AMOUNT"	NUMBER(30)		NULL,
	"ISCHECKED"	NUMBER(10)	DEFAULT 1	NULL,
	"ISPAID"	NUMBER(10)	DEFAULT 0	NULL
);

CREATE TABLE "PRODUCT_REV" (
	"REVCODE"	NUMBER(20)		NOT NULL,
	"PROCODE"	NUMBER(20)		NOT NULL,
	"REVCONT"	VARCHAR2(500)		NULL,
	"REVAUTH"	VARCHAR2(30)		NULL,
	"REVDATE"	DATE		NULL
);

CREATE TABLE "ADMIN" (
	"ID"	VARCHAR2(30)		NOT NULL,
	"PWD"	VARCHAR2(200)		NULL,
	"ADMIN"	VARCHAR2(10)	DEFAULT 'Y'	NULL
);

ALTER TABLE "PRODUCT_ORD" ADD CONSTRAINT "PK_PRODUCT_ORD" PRIMARY KEY (
	"ORDERCODE"
);

ALTER TABLE "PRODUCT_OUT" ADD CONSTRAINT "PK_PRODUCT_OUT" PRIMARY KEY (
	"POCODE",
	"ORDERCODE"
);

ALTER TABLE "PRODUCT" ADD CONSTRAINT "PK_PRODUCT" PRIMARY KEY (
	"PROCODE"
);

ALTER TABLE "PAY" ADD CONSTRAINT "PK_PAY" PRIMARY KEY (
	"PAYCODE",
	"ORDERCODE"
);

ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"ID"
);

ALTER TABLE "CATEGORY" ADD CONSTRAINT "PK_CATEGORY" PRIMARY KEY (
	"CATECODE"
);

ALTER TABLE "PRODUCT_QNA" ADD CONSTRAINT "PK_PRODUCT_QNA" PRIMARY KEY (
	"QNACODE"
);

ALTER TABLE "PRODUCT_QNA_RE" ADD CONSTRAINT "PK_PRODUCT_QNA_RE" PRIMARY KEY (
	"RECODE"
);

ALTER TABLE "NOTICE" ADD CONSTRAINT "PK_NOTICE" PRIMARY KEY (
	"NOTICODE"
);

ALTER TABLE "CART" ADD CONSTRAINT "PK_CART" PRIMARY KEY (
	"CARTCODE"
);

ALTER TABLE "PRODUCT_REV" ADD CONSTRAINT "PK_PRODUCT_REV" PRIMARY KEY (
	"REVCODE"
);

ALTER TABLE "ADMIN" ADD CONSTRAINT "PK_ADMIN" PRIMARY KEY (
	"ID"
);

ALTER TABLE "PRODUCT_OUT" ADD CONSTRAINT "FK_PRODUCT_ORD_TO_PRODUCT_OUT" FOREIGN KEY (
	"ORDERCODE"
)
REFERENCES "PRODUCT_ORD" (
	"ORDERCODE"
);

ALTER TABLE "PAY" ADD CONSTRAINT "FK_PRODUCT_ORD_TO_PAY" FOREIGN KEY (
	"ORDERCODE"
)
REFERENCES "PRODUCT_ORD" (
	"ORDERCODE"
);